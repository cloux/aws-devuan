#!/bin/sh
# Redis Server - in memory key-value database, cache and message broker
#
# (cloux@rote.ch)
exec 2>&1

NAME=${PWD##*/}
CONFIG=/etc/redis/redis.conf
DAEMON="$(command -v $NAME)"
[ -x "$DAEMON" ] || exit

# end all other unsupervised processes
killall --quiet --exact "$NAME"
[ "$(pgrep $NAME)" ] && exit

# ensure sysvinit compatibility - replace init.d script with symlink to sv
if [ -f /etc/init.d/$NAME ] && [ ! -h /etc/init.d/$NAME ]; then
	mv -f /etc/init.d/$NAME /etc/init.d/${NAME}.sysv
	ln -sf "$(command -v sv)" /etc/init.d/$NAME
fi

# run pre-up scripts
[ -d /etc/redis/${NAME}.pre-up.d ] && \
  su redis -s /bin/sh -c "run-parts --exit-on-error /etc/redis/${NAME}.pre-up.d"

# disable daemonization in the config file
[ -f "$CONFIG" ] && sed -i 's/^\s*daemonize\s*y.*/daemonize no/g' $CONFIG

# set limit for max opened files
MAXCLIENTS="$(grep maxclients "$CONFIG" 2>/dev/null | grep -o '[0-9]*')"
[ "$MAXCLIENTS" ] || MAXCLIENTS=10000
[ $(ulimit -n) -lt $MAXCLIENTS ] && ulimit -n $(( $MAXCLIENTS + 100 ))

# allow limit for TCP backlog
MAXCONN="$(grep '^\s*tcp-backlog' "$CONFIG" 2>/dev/null | grep -o '[0-9]*')"
[ "$MAXCONN" ] || MAXCONN=512
[ "$(cat /proc/sys/net/core/somaxconn 2>/dev/null)" -lt $MAXCONN ] && \
  sysctl -w net.core.somaxconn=$MAXCONN
[ "$(cat /proc/sys/net/ipv4/tcp_max_syn_backlog 2>/dev/null)" -lt $MAXCONN ] && \
  sysctl -w net.ipv4.tcp_max_syn_backlog=$MAXCONN

# fix background save failure under low memory conditions
[ "$(cat /proc/sys/vm/overcommit_memory 2>/dev/null)" = "0" ] && \
  sysctl -w vm.overcommit_memory=1

# Transparent Huge Pages support would create latency and memory usage issues
[ -f /sys/kernel/mm/transparent_hugepage/enabled ] && \
  echo never > /sys/kernel/mm/transparent_hugepage/enabled

exec chpst -u redis $DAEMON $CONFIG
